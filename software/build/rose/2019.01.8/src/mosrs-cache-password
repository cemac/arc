#!/bin/bash
set -u

gpgpresetpassphrase='/usr/libexec/gpg-preset-passphrase'

function die {
    echo ${1} 1>&2
    echo "Run \"$(basename ${0})\" to try caching your password again" 1>&2
    exit 1
}

function error {
    # Forget the passphrases so we can test for them being defined
    killall -u ${USER} -s HUP gpg-agent
    die "Error: ${1}"
}

rose config -q -f ${HOME}/.subversion/servers metofficesharedrepos username || \
error "Please configure your username in ~/.subversion/servers"

gpg-agent 2>/dev/null || error "gpg-agent not working"

# Get the id Subversion uses to index the password
CACHE_ID=$(echo -n "<https://code.metoffice.gov.uk:443> Met Office Code" | \
            md5sum | cut -f1 -d " ")

read -p "Met Office Science Repository Service password: " -s password; echo

if [[ -z ${password} ]]; then
    # Cache a dummy password to prevent the user being prompted for a password in every shell they open.
    # This allows them to just press return when they login if they don't require access.
    echo dummy | ${gpgpresetpassphrase} --preset "rosie:https:code.metoffice.gov.uk"
    die "No password entered - abort"
fi

# Cache the password in gpg-agent
echo ${password} | ${gpgpresetpassphrase} --preset "${CACHE_ID}"
echo ${password} | ${gpgpresetpassphrase} --preset "rosie:https:code.metoffice.gov.uk"

grep -q gpg-agent ${HOME}/.subversion/auth/svn.simple/${CACHE_ID} 2>/dev/null
if [[ "${?}" != "0" ]]; then
    echo "First time use: enter your password again"
    svn info https://code.metoffice.gov.uk/svn/test >/dev/null
    [[ "${?}" == "0" ]] || error "Subversion access failed"
fi

# Check access is working 
svn info --non-interactive https://code.metoffice.gov.uk/svn/test >/dev/null
[[ "${?}" == "0" ]] || error "Unable to access Subversion with given password"
echo "Subversion password cached"
rosie hello --prefix=u
[[ "${?}" == "0" ]] || error "Unable to access Rosie with given password"
echo "Rosie password cached"
